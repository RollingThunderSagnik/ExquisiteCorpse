[{"/home/sagnikg/AAO Website/Exquisite Corpse/corpse/src/index.js":"1","/home/sagnikg/AAO Website/Exquisite Corpse/corpse/src/reportWebVitals.js":"2","/home/sagnikg/AAO Website/Exquisite Corpse/corpse/src/App.js":"3","/home/sagnikg/AAO Website/Exquisite Corpse/corpse/src/socket.js":"4","/home/sagnikg/AAO Website/Exquisite Corpse/corpse/src/pages/game.js":"5","/home/sagnikg/AAO Website/Exquisite Corpse/corpse/src/chat.js":"6","/home/sagnikg/AAO Website/Exquisite Corpse/corpse/src/pages/sketch.js":"7","/home/sagnikg/AAO Website/Exquisite Corpse/corpse/src/pages/players.js":"8","/home/sagnikg/AAO Website/Exquisite Corpse/corpse/src/pages/endSketch.js":"9"},{"size":535,"mtime":1685773642945,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1685773642945,"results":"12","hashOfConfig":"11"},{"size":192,"mtime":1685787658936,"results":"13","hashOfConfig":"11"},{"size":244,"mtime":1686123347702,"results":"14","hashOfConfig":"11"},{"size":1169,"mtime":1686819347899,"results":"15","hashOfConfig":"11"},{"size":1975,"mtime":1686819484879,"results":"16","hashOfConfig":"11"},{"size":7820,"mtime":1686819374882,"results":"17","hashOfConfig":"11"},{"size":5986,"mtime":1686820113252,"results":"18","hashOfConfig":"11"},{"size":3069,"mtime":1686820770692,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"1n9w3q1",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"23"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},"/home/sagnikg/AAO Website/Exquisite Corpse/corpse/src/index.js",[],[],[],"/home/sagnikg/AAO Website/Exquisite Corpse/corpse/src/reportWebVitals.js",[],[],"/home/sagnikg/AAO Website/Exquisite Corpse/corpse/src/App.js",["53"],[],"import logo from './logo.svg';\nimport './App.css';\nimport Chat from './chat';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Chat></Chat>\n    </div>\n  );\n}\n\nexport default App;\n","/home/sagnikg/AAO Website/Exquisite Corpse/corpse/src/socket.js",[],[],"/home/sagnikg/AAO Website/Exquisite Corpse/corpse/src/pages/game.js",[],[],"/home/sagnikg/AAO Website/Exquisite Corpse/corpse/src/chat.js",[],[],[],"/home/sagnikg/AAO Website/Exquisite Corpse/corpse/src/pages/sketch.js",["54"],[],"import React, {Component} from 'react';\nimport { socket } from '../socket';\nimport p5 from 'p5';\nimport { isMobile } from 'react-device-detect';\n\nclass Sketch extends Component{\n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            username: this.props.username,\n            // active: true,\n            brushSize: 5,\n            mode: 1,\n            scale: Math.min( (window.innerWidth-20)/500 , (window.innerHeight-20)/500 ,1)\n        }\n        this.myRef = React.createRef();\n        this.paintMode = this.paintMode.bind(this);\n        this.eraseMode = this.eraseMode.bind(this);\n        this.reset = this.reset.bind(this);\n        this.sendSketch = this.sendSketch.bind(this);\n        this.submit = this.submit.bind(this);\n        this.clue = null;\n        this.sendTo = null;\n    }\n\n    componentDidMount()\n    {\n        if(this.sketch)\n        {\n            this.sketch.remove();\n        }\n\n        this.sketch = new p5( p  => {\n            \n            p.setup = () => {\n                // let height = window.innerHeight*(isMobile?1.2:1);\n                p.pixelDensity(1);\n                this.canvas = p.createCanvas(500,500).parent(this.myRef.current);\n                p.background('#ffffff');\n                \n            };\n\n            p.draw = () => {\n                if (p.mouseIsPressed && this.state.active) {\n                    p.stroke(this.state.mode?\"#000000\":\"#ffffff\");\n                    p.strokeWeight(this.state.brushSize*this.state.brushSize);\n                    let sc = this.state.scale;\n                    p.line(p.mouseX/sc, p.mouseY/sc, p.pmouseX/sc, p.pmouseY/sc);\n                }\n            }\n\n            socket.on(\"receiveSketch\", (data) => {\n                p.loadImage(data.clue, (img) => {\n                    this.clue = img;\n                    p.background(255);\n                    p.image(img,0,0);\n                    console.log(data.from);\n                });\n            })\n        });\n\n        socket.on(\"receiveActive\", (name) => {\n            if(name == this.state.username)\n            {\n                this.setState({\n                    active: true\n                });\n            }\n            else\n            {\n                this.setState({\n                    active: false\n                });\n            }\n        });\n\n        window.addEventListener('sendTo', (e)=>{\n            // console.log(e.detail);\n            this.sendTo = e.detail;\n            this.sendSketch()\n        });\n    }\n\n    sendSketch()\n    {\n        if(this.canvas)\n        {\n            //full canvas\n            let fullCanvasData = (this.canvas.elt.toDataURL());\n\n            var hidden_canv = document.createElement('canvas');\n            hidden_canv.style.display = 'none';\n            document.body.appendChild(hidden_canv);\n            hidden_canv.width = 500;\n            hidden_canv.height = 75;\n\n            var hidden_ctx = hidden_canv.getContext('2d');\n            hidden_ctx.drawImage(\n                this.canvas.elt, \n                0,//Start Clipping\n                425,//Start Clipping\n                500,//Clipping Width\n                75,//Clipping Height\n                0,//Place X\n                0,//Place Y\n                hidden_canv.width,//Place Width\n                hidden_canv.height//Place Height\n            );\n\n            let clueCanvasData = (hidden_canv.toDataURL());\n            // socket.emit(\"dummySendSketch\", clueCanvasData);\n            socket.emit(\"sendSketch\", {\n                from: this.state.username,\n                to: this.sendTo,\n                clueCnvs: clueCanvasData,\n                cnvs: fullCanvasData\n            });\n        }\n    }\n\n    paintMode()\n    {\n        this.setState({\n            mode: 1\n        });\n    }\n\n    eraseMode()\n    {\n        this.setState({\n            mode: 0\n        });\n    }\n\n    reset()\n    {\n        if(this.sketch)\n        {\n            this.sketch.background(255);\n            if(this.clue)\n            {\n                this.sketch.image(this.clue,0,0);\n            }\n        }\n    }\n\n    submit()\n    {\n        if(this.canvas)\n        {\n            let fullCanvasData = (this.canvas.elt.toDataURL());\n            socket.emit(\"endGame\", {\n                from: this.state.username,\n                to: this.sendTo,\n                cnvs: fullCanvasData\n            });\n        }\n        // console.log(fullCanvasData);\n    }\n    \n    render()\n    {\n        let guard = (<div style={{\n            position: \"absolute\",\n            background: \"var(--blur1)\",\n            height: \"100%\",\n            width: \"100%\",\n            backdropFilter: \"blur(10px)\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            display: \"flex\",\n            opacity: 1\n        }}>\n            WAIT FOR YOUR TURN...\n        </div>);\n        return (\n            <div \n            style={{\n                display: \"flex\",\n                flexDirection: isMobile?\"column\":\"row\",\n                flex: 1,\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                position: \"relative\",\n                width: \"100vw\"\n            }}>\n\n                <div \n                style={{\n                    flex: 1,\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    transform: \"scale(\" + this.state.scale +\")\"\n                }}\n                ref={this.myRef}>\n                </div>\n                \n                <div \n                className='brushOptions'\n                style={{\n                    // background: \"rgba(0,0,0,0.5)\",\n                    justifySelf: \"flex-end\",\n                    float: \"right\",\n                    height: isMobile?\"auto\":\"100%\",//\"100vh\",\n                    flexDirection: isMobile?\"row\":\"column\",\n                    flexWrap: \"wrap\",\n                    display: \"flex\",\n                    justifyContent: isMobile?\"space-evenly\":\"center\",\n                    alignItems: \"center\",\n                    margin: \"0.1em\"\n                }}>\n                    <input\n                    type=\"range\"\n                    min=\"1\"\n                    max=\"10\"\n                    step=\"0.5\"\n                    className='slider'\n                    onChange={(e) => this.setState({ brushSize: e.target.value})}\n                    value={this.state.brushSize}></input>\n                    <button \n                        style={{\n                        width: isMobile?\"auto\":\"90%\",\n                        background: this.state.mode?\"var(--bg3)\":\"var(--bg2)\"\n                        }}\n                        onClick={this.paintMode}>\n                        Paint\n                    </button>\n                    <button \n                        style={{\n                        width: isMobile?\"auto\":\"90%\",\n                        background: this.state.mode?\"var(--bg2)\":\"var(--bg3)\"\n                        }}\n                        onClick={this.eraseMode}>\n                        Erase\n                    </button>\n                    <button \n                        style={{\n                        width: isMobile?\"auto\":\"90%\",\n                        background: \"var(--bg2)\"\n                        }}\n                        onClick={this.reset}>\n                        Reset\n                    </button>\n                    <button \n                        style={{\n                        width: isMobile?\"auto\":\"90%\",\n                        background: \"var(--bg2)\"\n                        }}\n                        onClick={this.submit}>\n                        End Game\n                    </button>\n                </div>\n\n                {this.state.active?<></>:guard}\n\n            </div>\n        );\n    }\n}\n\nexport default Sketch;","/home/sagnikg/AAO Website/Exquisite Corpse/corpse/src/pages/players.js",["55","56","57","58","59"],[],"import React, {Component} from 'react';\nimport { isMobile } from 'react-device-detect';\nimport { socket } from '../socket';\n\nclass Player extends Component{\n\n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            username: this.props.username,\n            name: this.props.name,\n            active: this.props.active,\n            // userActive: false,\n        }\n        this.send = this.send.bind(this);\n        // this.modalFn = this.props.modalFn;\n    }\n\n    send(event)\n    {\n        if(this.state.username==this.state.active)\n        {\n            const sendTo = new CustomEvent('sendTo', { \n                detail: this.state.name\n            });\n            window.dispatchEvent(sendTo);\n            if(this.props.modalFn)\n            { \n                this.props.modalFn();\n            }\n        }\n        event.preventDefault();\n    }\n\n    componentDidUpdate(prevProps)\n    {\n      if(this.props.name !== prevProps.name)\n      {\n        this.setState({\n          name: this.props.name\n        });\n      }\n      if(this.props.active !== prevProps.active)\n      {\n        this.setState({\n            active: this.props.active\n        });\n      }\n    }\n\n    render()\n    {\n        let isActive = (this.state.username==this.state.active);\n        // console.log(this.state.name==this.state.active,this.state.name,this.state.active, isActive)\n        let activePlayer = (this.state.name==this.state.active);\n        let greenSignal = (\n            <div style={{\n                width: \"0.8em\",\n                height: \"0.8em\",\n                background: \"#21c54a\",\n                borderRadius: \"100%\",\n                // float: \"right\"\n            }}>\n\n            </div>\n        );\n        return(\n            <div\n            className={(isActive)?'player':''}\n            style={{\n                padding: '1em',\n                cursor : (isActive)?'pointer':'auto',\n                transition: 'all 0.1s ease-in',\n                display: \"flex\",\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                // justifyContent: \"center\"\n            }}\n            onClick={this.send}\n            >\n                <div style={{\n                    flex: 1,\n                    color: (isActive)?'#fff':'#aaa',\n                }}>\n                    {this.state.name}\n                </div>\n                {activePlayer?greenSignal:<></>}\n            </div>\n        );\n    }\n\n}\n\nclass Players extends Component{\n\n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            username: this.props.username,\n            playerNames: ['Sagnik','Jagori'],\n            // userActive: 'Sagnik',\n            modal: false\n        }\n        this.toggleModal = this.toggleModal.bind(this);\n    }\n\n    componentDidMount()\n    {\n        // console.log(this.state.username);\n        socket.emit(\"getPlayersInfo\");\n        socket.on(\"playersInfo\", (info) => {\n            let names = info.filter( (name) => name != this.state.username)\n            this.setState({\n                playerNames: names\n            });\n        });\n\n        socket.on(\"receiveActive\", (name) => {\n            this.setState({\n                userActive: name\n            }); \n        });\n    }\n\n    toggleModal()\n    {\n        this.setState({\n            modal: !this.state.modal\n        });\n    }\n\n    render()\n    {\n        let mobileRender = (\n            <div>\n                <div style={{\n                    background: this.state.modal?\"var(--bg3)\":\"var(--bg2)\",\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    position: \"absolute\",\n                    height: \"2.5em\",\n                    width: \"5em\",\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    top: \"1em\",\n                    right: \"1em\",\n                    borderRadius: \"0.5em\",\n                    fontSize: \"1em\",\n                    lineHeight: \"2.5em\",\n                    margin: \"0em 0.8em\",\n                    // padding: \"0 1em\",\n                }}\n                onClick={this.toggleModal}>\n                    {this.state.modal?\"Close\":\"Send To\"}\n                </div>\n                {this.state.modal?(<div style={{\n                    background: \"var(--bg0)\",\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    minWidth: \"10vw\",\n                    position: \"absolute\",\n                    width: \"50%\",\n                    top: \"50%\",\n                    left: \"50%\",\n                    transform: \"translate(-50%,-50%)\"\n                }}>\n                    {\n                        this.state.playerNames.map( (name,i) => \n                            <Player \n                                active={this.state.userActive}\n                                key={i}  \n                                username={this.state.username}  \n                                name={name}\n                                modalFn={this.toggleModal}\n                                >\n                            </Player>\n                        )\n                    }\n                </div>):<></>}\n            </div>\n        );\n\n\n        let pcRender = (\n            <div style={{\n                background: \"var(--bg0)\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                minWidth: \"10vw\",\n            }}>\n                {\n                    this.state.playerNames.map( (name,i) => \n                        <Player \n                            active={this.state.userActive}\n                            key={i}  \n                            username={this.state.username}  \n                            name={name}>\n                        </Player>\n                    )\n                }\n            </div>\n        );\n\n        return (isMobile?mobileRender:pcRender);\n    }\n}\n\nexport default Players;","/home/sagnikg/AAO Website/Exquisite Corpse/corpse/src/pages/endSketch.js",["60","61"],[],"import React, {Component} from 'react';\nimport { socket } from '../socket';\nimport p5 from 'p5';\n\nclass EndSketch extends Component{\n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            username: this.props.username,\n            baseStrings: this.props.baseStrings,\n            scale: 1\n        }\n        this.myRef = React.createRef();\n        this.makeImage = this.makeImage.bind(this);\n    }\n\n    componentDidMount()\n    {\n        console.log(this.state.baseStrings);\n        if(this.sketch)\n        {\n            this.sketch.remove();\n        }\n\n        this.sketch = new p5( p  => {\n            const imageLoader = (url) => {\n                return new Promise( (resolve, reject) => {\n                    p.loadImage(url, \n                        (result) => {\n                            resolve(result);        \n                        }, \n                        () => {\n                            reject(Error(\"Image not found\"))\n                        });\n\n                });\n            };\n            \n            p.setup = async () => {\n                let lngth = Object.keys(this.state.baseStrings).length;//this.state.baseStrings.length;\n                p.pixelDensity(1);\n                this.canvas = p.createCanvas(500,425*lngth + 75).parent(this.myRef.current);\n                p.background('#ffffff');\n                for(let i=0;i<lngth;i++)\n                {\n                    let img  = await imageLoader(this.state.baseStrings[i]);\n                    p.image(img,0,425*i);\n                }\n                let sc = Math.min( window.innerWidth/p.width , window.innerHeight/p.height );\n                // sc = Math.round(sc*100);\n                this.setState({\n                    scale: sc\n                });\n                this.makeImage();\n            };\n\n            p.draw = () => {\n                p.noLoop();\n            }\n        });\n    }\n\n    makeImage()\n    {\n        if(this.canvas)\n        {\n            let fullCanvasData = (this.canvas.elt.toDataURL());\n            this.setState({\n                imgSrc: fullCanvasData\n            });\n        }\n        this.sketch.remove();\n    }\n    \n    render()\n    {\n        return (\n            <div style={{\n                background: \"var(--bg1)\",\n                display: \"flex\",\n                height: \"100%\",//'100vh',\n                width: '100vw',\n                overflowX: \"hidden\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n            }}>\n            <div \n            style={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                flex: 1,\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                position: \"relative\",\n                transform: \"scale(\" + this.state.scale +\")\"\n            }}\n            ref={this.myRef}>\n                {this.state.imgSrc?(\n                    <img src={this.state.imgSrc}/>\n                    ):(<></>)}\n            </div>\n        </div>\n        );\n    }\n}\n\nexport default EndSketch;",{"ruleId":"62","severity":1,"message":"63","line":1,"column":8,"nodeType":"64","messageId":"65","endLine":1,"endColumn":12},{"ruleId":"66","severity":1,"message":"67","line":64,"column":21,"nodeType":"68","messageId":"69","endLine":64,"endColumn":23},{"ruleId":"66","severity":1,"message":"67","line":22,"column":31,"nodeType":"68","messageId":"69","endLine":22,"endColumn":33},{"ruleId":"66","severity":1,"message":"67","line":54,"column":44,"nodeType":"68","messageId":"69","endLine":54,"endColumn":46},{"ruleId":"66","severity":1,"message":"67","line":56,"column":44,"nodeType":"68","messageId":"69","endLine":56,"endColumn":46},{"ruleId":"66","severity":1,"message":"70","line":114,"column":53,"nodeType":"68","messageId":"69","endLine":114,"endColumn":55},{"ruleId":"71","severity":1,"message":"72","line":145,"column":21,"nodeType":"73","messageId":"69","endLine":145,"endColumn":28},{"ruleId":"62","severity":1,"message":"74","line":2,"column":10,"nodeType":"64","messageId":"65","endLine":2,"endColumn":16},{"ruleId":"75","severity":1,"message":"76","line":100,"column":21,"nodeType":"77","endLine":100,"endColumn":51},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-dupe-keys","Duplicate key 'display'.","ObjectExpression","'socket' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]